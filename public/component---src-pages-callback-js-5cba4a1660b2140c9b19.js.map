{"version":3,"sources":["webpack:///./src/pages/callback.js","webpack:///./src/services/Apollo/Queries/auth.js","webpack:///./src/services/Apollo/Mutations/users.js","webpack:///./node_modules/react-apollo-hooks/es/useMutation.js"],"names":["__webpack_exports__","props","updateLocalUser","useMutation","TOGGLE_LOGGED_IN","variables","Status","hash","location","split","length","token","SIGNUP","refetchQueries","query","SUBSCRIBE_USER","then","$","navigateTo","gql","_templateObject","IS_LOGGED_IN","_templateObject2","GUEST_SIGNUP","LOGOUT","_templateObject3","_templateObject4","__webpack_require__","d","_ApolloContext__WEBPACK_IMPORTED_MODULE_0__","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","mutation","_temp","_ref","overrideClient","client","baseOptions","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","options","mutate"],"mappings":"oJAOeA,EAAA,iBAAAC,GACb,IAAMC,EAAkBC,YAAYC,IAAkB,CACpDC,UAAW,CAAEC,QAAQ,KAEjBC,EAAON,EAAMO,SAASD,KAAKE,MAAM,kBAEvC,GAAIF,EAAKG,OAAS,EAAG,OAAO,KAE5B,IAAMC,EAAQJ,EAAK,GAAGE,MAAM,KAAK,GASjC,OAPAN,YAAYS,IAAQ,CAClBP,UAAW,CAAEM,SACbE,eAAgB,CAAC,CAAEC,MAAOC,OAF5BZ,GAGKa,KAAK,SAAAC,GAAC,OAAIf,MAEfgB,qBAAW,KAEJ,4aCtBF,IAAMH,EAAiBI,IAAHC,KAWdC,EAAeF,IAAHG,ysBCXzB,IAAMC,EAAeJ,IAAHC,KAMZI,EAASL,IAAHG,KAMNV,EAASO,IAAHM,KAMNrB,EAAmBe,IAAHO,uCCpBtBC,EAAAC,EAAA5B,EAAA,sBAAAG,IAAA,IAAA0B,EAAAF,EAAA,cAAAG,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAzB,OAAsBwB,IAAA,CAAO,IAAAE,EAAAD,UAAAD,GAA2B,QAAAG,KAAAD,EAA0BL,OAAAO,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDJ,EAAAI,GAAAD,EAAAC,IAAiC,OAAAJ,IAAkBQ,MAAAC,KAAAP,WAK5Q,SAAAhC,EAAAwC,EAAAC,GACP,IAAAC,OAAA,IAAAD,EAAA,GAAkCA,EAClCE,EAAAD,EAAAE,OACAC,EANA,SAAAZ,EAAAa,GAA0D,SAAAb,EAAA,SAA+B,IAAuDC,EAAAH,EAAvDD,EAAA,GAAiBiB,EAAAnB,OAAAoB,KAAAf,GAAkD,IAAAF,EAAA,EAAYA,EAAAgB,EAAAxC,OAAuBwB,IAAOG,EAAAa,EAAAhB,GAAqBe,EAAAG,QAAAf,IAAA,IAA0CJ,EAAAI,GAAAD,EAAAC,IAA6B,OAAAJ,EAMlSoB,CAAAR,EAAA,YAEAE,EAAehB,OAAAF,EAAA,EAAAE,CAAee,GAC9B,gBAAAQ,GACA,OAAAP,EAAAQ,OAAAzB,EAAA,CACAa,YACKK,EAAAM","file":"component---src-pages-callback-js-5cba4a1660b2140c9b19.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { navigateTo } from 'gatsby-link'\n\nimport { useMutation } from 'react-apollo-hooks'\nimport { SUBSCRIBE_USER } from '../services/Apollo/Queries/auth'\nimport { SIGNUP, TOGGLE_LOGGED_IN } from '../services/Apollo/Mutations/users'\n\nexport default props => {\n  const updateLocalUser = useMutation(TOGGLE_LOGGED_IN, {\n    variables: { Status: true },\n  })\n  const hash = props.location.hash.split('#access_token=')\n\n  if (hash.length < 2) return null\n\n  const token = hash[1].split('&')[0]\n\n  useMutation(SIGNUP, {\n    variables: { token },\n    refetchQueries: [{ query: SUBSCRIBE_USER }],\n  })().then($ => updateLocalUser())\n\n  navigateTo('/')\n\n  return null\n}\n","import gql from 'graphql-tag'\n\nexport const SUBSCRIBE_USER = gql`\n  query {\n    CurrentUser {\n      given_name\n      family_name\n      picture\n      isGuest\n    }\n  }\n`\n\nexport const IS_LOGGED_IN = gql`\n  query IsLoggedIn {\n    IsLoggedIn @client\n  }\n`\n","import gql from 'graphql-tag'\n\nconst GUEST_SIGNUP = gql`\n  mutation Guest_Signup {\n    Guest_Signup\n  }\n`\n\nconst LOGOUT = gql`\n  mutation Logout {\n    Logout\n  }\n`\n\nconst SIGNUP = gql`\n  mutation signup($token: String!) {\n    signup(token: $token)\n  }\n`\n\nconst TOGGLE_LOGGED_IN = gql`\n  mutation ToggleLoggedIn($Status: Boolean!) {\n    ToggleLoggedIn(Status: $Status) @client\n  }\n`\n\nexport { SIGNUP, GUEST_SIGNUP, LOGOUT, TOGGLE_LOGGED_IN }\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useApolloClient } from './ApolloContext';\nexport function useMutation(mutation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      overrideClient = _ref.client,\n      baseOptions = _objectWithoutPropertiesLoose(_ref, [\"client\"]);\n\n  var client = useApolloClient(overrideClient);\n  return function (options) {\n    return client.mutate(_extends({\n      mutation: mutation\n    }, baseOptions, options));\n  };\n}"],"sourceRoot":""}